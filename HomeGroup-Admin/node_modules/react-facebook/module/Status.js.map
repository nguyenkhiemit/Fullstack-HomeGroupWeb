{"version":3,"sources":["../src/Status.jsx"],"names":["api","response","getLoginStatus","status","React","Component","Initialize","Subscribe","Status","state","loading","handleReady","setState","handleStatusChange","render","children","props"],"mappings":";;;+BAKA,WAA8BA,GAA9B,EAA4D;AAC1D,UAAMC,WAAW,MAAMD,IAAIE,cAAJ,EAAvB;;AAEA,WAAOD,SAASE,MAAhB;AACD,G;;kBAJcD,c;;;;;AAJf,OAAOE,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAiBA,eAAe,MAAMC,MAAN,SAAqBH,SAArB,CAA6C;AAAA;AAAA;;AAAA,gDAC1DI,KAD0D,GAC3C;AACbC,eAAS;AADI,KAD2C,OAK1DC,WAL0D;AAAA,oCAK5C,WAAOX,GAAP,EAAsC;AAClD,cAAKY,QAAL,CAAc;AACZT,kBAAQ,MAAMD,eAAeF,GAAf,CADF;AAEZU,mBAAS;AAFG,SAAd;AAID,OAVyD;;AAAA;AAAA;AAAA;AAAA,eAY1DG,kBAZ0D,GAYpCZ,QAAD,IAA4B;AAC/C,WAAKW,QAAL,CAAc;AACZT,gBAAQF,SAASE,MADL;AAEZO,iBAAS;AAFG,OAAd;AAID,KAjByD;AAAA;;AAmB1DI,WAAS;AACP,UAAM,EAAEC,QAAF,KAAe,KAAKC,KAA1B;AACA,UAAM,EAAEb,MAAF,EAAUO,OAAV,KAAsB,KAAKD,KAAjC;;AAEA,WACE;AAAC,gBAAD;AAAA,QAAY,SAAS,KAAKE,WAA1B;AACE;AAAC,iBAAD;AAAA,UAAW,OAAM,mBAAjB,EAAqC,UAAU,KAAKE,kBAApD;AACGE,iBAAS;AACRZ,gBADQ;AAERO;AAFQ,SAAT;AADH;AADF,KADF;AAUD;AAjCyD","file":"Status.js","sourcesContent":["// @flow\nimport React, { Component } from 'react';\nimport Initialize from './Initialize';\nimport Subscribe from './Subscribe';\n\nasync function getLoginStatus(api: Object): Promise<string> {\n  const response = await api.getLoginStatus();\n\n  return response.status;\n}\n\ntype Props = {\n  children: Function,\n};\n\ntype State = {\n  loading: Boolean,\n  status?: undefined,\n};\n\nexport default class Status extends Component<Props, State> {\n  state: State = {\n    loading: true,\n  };\n\n  handleReady = async (api: Object): Promise<void> => {\n    this.setState({\n      status: await getLoginStatus(api),\n      loading: false,\n    });\n  }\n\n  handleStatusChange = (response: Object): void => {\n    this.setState({\n      status: response.status,\n      loading: false,\n    });\n  }\n\n  render() {\n    const { children } = this.props;\n    const { status, loading } = this.state;\n\n    return (\n      <Initialize onReady={this.handleReady}>\n        <Subscribe event=\"auth.statusChange\" onChange={this.handleStatusChange}>\n          {children({\n            status,\n            loading,\n          })}\n        </Subscribe>\n      </Initialize>\n    );\n  }\n}\n"]}