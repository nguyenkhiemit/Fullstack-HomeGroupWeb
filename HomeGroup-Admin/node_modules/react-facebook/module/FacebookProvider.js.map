{"version":3,"sources":["../src/FacebookProvider.jsx"],"names":["React","Component","createContext","canUseDOM","FB","FacebookContext","api","Facebook","state","isReady","handleInit","Error","domain","version","appId","cookie","status","xfbml","language","frictionlessRequests","wait","props","init","setState","componentDidMount","render","children","error","value","defaultProps","undefined"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAA2D,OAA3D;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,EAAP,MAAe,YAAf;;AAEA,OAAO,MAAMC,kBAAkBH,eAAxB;AACP,IAAII,MAAM,IAAV;;AAmBA,eAAe,MAAMC,QAAN,SAAuBN,SAAvB,CAA+C;AAAA;AAAA;;AAAA,gDAa5DO,KAb4D,GAa7C;AACbC,eAAS;AADI,KAb6C,OAwB5DC,UAxB4D,qBAwB/C,aAAyB;AACpC;AACA,UAAI,CAACP,SAAL,EAAgB;AACd,cAAM,IAAIQ,KAAJ,CAAU,sCAAV,CAAN;AACD;;AAED,YAAM,EAAEF,OAAF,KAAc,MAAKD,KAAzB;AACA,UAAIC,OAAJ,EAAa;AACX,eAAOH,GAAP;AACD;;AAED,UAAI,CAACA,GAAL,EAAU;AACR,cAAM;AACJM,gBADI;AAEJC,iBAFI;AAGJC,eAHI;AAIJC,gBAJI;AAKJC,gBALI;AAMJC,eANI;AAOJC,kBAPI;AAQJC,8BARI;AASJC;AATI,YAUF,MAAKC,KAVT;;AAYAf,cAAM,IAAIF,EAAJ,CAAO;AACXQ,gBADW;AAEXE,eAFW;AAGXD,iBAHW;AAIXE,gBAJW;AAKXC,gBALW;AAMXC,eANW;AAOXC,kBAPW;AAQXC,8BARW;AASXC;AATW,SAAP,CAAN;AAWD;;AAED,YAAMd,IAAIgB,IAAJ,EAAN;;AAEA,UAAI,CAAC,MAAKd,KAAL,CAAWC,OAAhB,EAAyB;AACvB,cAAKc,QAAL,CAAc;AACZd,mBAAS;AADG,SAAd;AAGD;;AAED,aAAOH,GAAP;AACD,KAtE2D;AAAA;;AAiB5DkB,sBAA0B;AACxB,UAAM,EAAEJ,IAAF,KAAW,KAAKC,KAAtB;AACA,QAAI,CAACD,IAAL,EAAW;AACT,WAAKV,UAAL;AACD;AACF;;AAkDDe,WAAS;AACP,UAAM,EAAEC,QAAF,KAAe,KAAKL,KAA1B;AACA,UAAM,EAAEZ,OAAF,EAAWkB,KAAX,KAAqB,KAAKnB,KAAhC;AACA,UAAM,EAAEE,UAAF,KAAiB,IAAvB;;AAEA,UAAMkB,QAAQ;AACZnB,aADY;AAEZkB,WAFY;AAGZjB,gBAHY;AAIZJ;AAJY,KAAd;;AAOA,WACE;AAAC,qBAAD,CAAiB,QAAjB;AAAA,QAA0B,OAAOsB,KAAjC;AACGF;AADH,KADF;AAKD;AAzF2D;AAAzCnB,Q,CACZsB,Y,GAAe;AACpBhB,WAAS,MADW;AAEpBE,UAAQ,KAFY;AAGpBC,UAAQ,KAHY;AAIpBC,SAAO,KAJa;AAKpBC,YAAU,OALU;AAMpBC,wBAAsB,KANF;AAOpBP,UAAQ,sBAPY;AAQpBc,YAAUI,SARU;AASpBV,QAAM;AATc,C","file":"FacebookProvider.js","sourcesContent":["// @flow\nimport React, { Component, createContext, type Node } from 'react';\nimport canUseDOM from 'can-use-dom';\nimport FB from './Facebook';\n\nexport const FacebookContext = createContext();\nlet api = null;\n\ntype Props = {\n  appId: string,\n  domain?: string,\n  version?: string,\n  cookie?: boolean,\n  status?: boolean,\n  xfbml?: boolean,\n  language?: string,\n  frictionlessRequests?: boolean,\n  children?: Node,\n  wait?: boolean,\n};\n\ntype State = {\n  isReady: boolean,\n};\n\nexport default class Facebook extends Component<Props, State> {\n  static defaultProps = {\n    version: 'v3.1',\n    cookie: false,\n    status: false,\n    xfbml: false,\n    language: 'en_US',\n    frictionlessRequests: false,\n    domain: 'connect.facebook.net',\n    children: undefined,\n    wait: false,\n  };\n\n  state: State = {\n    isReady: false,\n  };\n\n  componentDidMount(): void {\n    const { wait } = this.props;\n    if (!wait) {\n      this.handleInit();\n    }\n  }\n\n  handleInit = async (): Promise<FB> => {\n    // do not run if SSR\n    if (!canUseDOM) {\n      throw new Error('You can not use Facebook without DOM');\n    }\n\n    const { isReady } = this.state;\n    if (isReady) {\n      return api;\n    }\n\n    if (!api) {\n      const {\n        domain,\n        version,\n        appId,\n        cookie,\n        status,\n        xfbml,\n        language,\n        frictionlessRequests,\n        wait,\n      } = this.props;\n\n      api = new FB({\n        domain,\n        appId,\n        version,\n        cookie,\n        status,\n        xfbml,\n        language,\n        frictionlessRequests,\n        wait,\n      });\n    }\n\n    await api.init();\n\n    if (!this.state.isReady) {\n      this.setState({\n        isReady: true,\n      });\n    }\n\n    return api;\n  }\n\n  render() {\n    const { children } = this.props;\n    const { isReady, error } = this.state;\n    const { handleInit } = this;\n\n    const value = {\n      isReady,\n      error,\n      handleInit,\n      api,\n    };\n\n    return (\n      <FacebookContext.Provider value={value}>\n        {children}\n      </FacebookContext.Provider>\n    );\n  }\n}\n"]}