{"version":3,"sources":["../src/Profile.jsx"],"names":["Profile","state","loading","handleReady","api","updateProfile","handleStatusChange","fields","props","getLoginStatus","response","status","LoginStatus","CONNECTED","setState","profile","undefined","error","getProfile","render","children","Component","defaultProps","Fields"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAaqBA,O;;;;;;;;;;;;;;0JAKnBC,K,GAAe;AACbC,eAAS;AADI,K,QAIfC,W;0FAAc,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AACZ,sBAAKA,GAAL,GAAWA,GAAX;;AAEA,sBAAKC,aAAL;;AAHY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;eAMdC,kB,GAAqB,YAAY;AAC/B,YAAKD,aAAL;AACD,K;;;oBAEKA,a;;;;;;;;AACID,iB,GAA2B,I,CAA3BA,G,EAAcG,M,GAAa,I,CAAtBC,K,CAASD,M;;kBACjBH,G;;;;;;;;;;qBAKoBA,IAAIK,cAAJ,E;;;AAAjBC,sB;;oBACFA,SAASC,MAAT,KAAoBC,sBAAYC,S;;;;;AAClC,mBAAKC,QAAL,CAAc;AACZC,yBAASC,SADG;AAEZd,yBAAS,KAFG;AAGZe,uBAAOD;AAHK,eAAd;;;;;;qBASoBZ,IAAIc,UAAJ,CAAe;AACnCX;AADmC,eAAf,C;;;AAAhBQ,sB;;;AAIN,mBAAKD,QAAL,CAAc;AACZC,iCADY;AAEZb,yBAAS,KAFG;AAGZe,uBAAOD;AAHK,eAAd;;;;;;;;AAMA,mBAAKF,QAAL,CAAc;AACZC,yBAASC,SADG;AAEZd,yBAAS,KAFG;AAGZe;AAHY,eAAd;;;;;;;;;;;;;;;;;oBAQJE,M,qBAAS;AAAA,QACCC,QADD,GACc,KAAKZ,KADnB,CACCY,QADD;AAAA,iBAE6B,KAAKnB,KAFlC;AAAA,QAECc,OAFD,UAECA,OAFD;AAAA,QAEUb,OAFV,UAEUA,OAFV;AAAA,QAEmBe,KAFnB,UAEmBA,KAFnB;;;AAIP,WACE;AAAC,0BAAD;AAAA,QAAY,SAAS,KAAKd,WAA1B;AACE;AAAC,2BAAD;AAAA,UAAW,OAAM,mBAAjB,EAAqC,UAAU,KAAKG,kBAApD;AACGc,iBAAS;AACRL,0BADQ;AAERb,0BAFQ;AAGRe;AAHQ,SAAT;AADH;AADF,KADF;AAWD,G;;;EAtEkCI,gB,UAC5BC,Y,GAAe;AACpBf,UAAQgB;AADY,C;kBADHvB,O","file":"Profile.js","sourcesContent":["// @flow\nimport React, { Component } from 'react';\nimport Initialize from './Initialize';\nimport Subscribe from './Subscribe';\nimport Fields from './constants/Fields';\nimport LoginStatus from './constants/LoginStatus';\n\ntype Props = {\n  children: Function,\n  fields?: string[],\n};\n\ntype State = {\n  loading: Boolean,\n  profile?: Object,\n  error?: Error,\n};\n\nexport default class Profile extends Component<Props, State> {\n  static defaultProps = {\n    fields: Fields,\n  };\n\n  state: State = {\n    loading: true,\n  };\n\n  handleReady = async (api: Object): Promise<void> => {\n    this.api = api;\n\n    this.updateProfile();\n  }\n\n  handleStatusChange = (): void => {\n    this.updateProfile();\n  }\n\n  async updateProfile() {\n    const { api, props: { fields } } = this;\n    if (!api) {\n      return;\n    }\n\n    try {\n      const response = await api.getLoginStatus();\n      if (response.status !== LoginStatus.CONNECTED) {\n        this.setState({\n          profile: undefined,\n          loading: false,\n          error: undefined,\n        });\n\n        return;\n      }\n\n      const profile = await api.getProfile({\n        fields,\n      });\n\n      this.setState({\n        profile,\n        loading: false,\n        error: undefined,\n      });\n    } catch (error) {\n      this.setState({\n        profile: undefined,\n        loading: false,\n        error,\n      });\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    const { profile, loading, error } = this.state;\n\n    return (\n      <Initialize onReady={this.handleReady}>\n        <Subscribe event=\"auth.statusChange\" onChange={this.handleStatusChange}>\n          {children({\n            profile,\n            loading,\n            error,\n          })}\n        </Subscribe>\n      </Initialize>\n    );\n  }\n}\n"]}