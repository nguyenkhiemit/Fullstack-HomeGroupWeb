{"version":3,"sources":["../src/Facebook.js"],"names":["Method","GET","POST","DELETE","Facebook","options","domain","version","cookie","status","xfbml","language","frictionlessRequests","appId","Error","wait","init","getAppId","loadingPromise","Promise","resolve","window","fbAsyncInit","FB","fjs","document","getElementsByTagName","getElementById","js","createElement","id","async","src","parentNode","insertBefore","process","method","before","after","fb","reject","response","error","code","type","message","ui","api","path","params","login","opts","logout","getLoginStatus","getAuthResponse","getTokenDetail","LoginStatus","CONNECTED","authResponse","getProfile","getTokenDetailWithProfile","tokenDetail","profile","getToken","accessToken","getUserId","userID","sendInvite","to","postAction","ogNamespace","ogAction","ogObject","ogObjectUrl","noFeedStory","url","encodeURIComponent","getPermissions","data","hasPermissions","permissions","usersPermissions","findedPermissions","filter","p","currentPermission","find","row","permission","length","subscribe","eventName","callback","Event","unsubscribe","parse","XFBML","getRequests","removeRequest","requestID","setAutoGrow","Canvas","paySimple","product","quantity","action","pay"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;;;;;;AAEO,IAAMA,0BAAS;AACpBC,OAAK,KADe;AAEpBC,QAAM,MAFc;AAGpBC,UAAQ;AAHY,CAAf;;IAMcC,Q;AACnB,sBAA0B;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAAA;;AACxB,SAAKA,OAAL;AACEC,cAAQ,sBADV;AAEEC,eAAS,MAFX;AAGEC,cAAQ,KAHV;AAIEC,cAAQ,KAJV;AAKEC,aAAO,KALT;AAMEC,gBAAU,OANZ;AAOEC,4BAAsB;AAPxB,OAQKP,OARL;;AAWA,QAAI,CAAC,KAAKA,OAAL,CAAaQ,KAAlB,EAAyB;AACvB,YAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,QAAI,CAAC,KAAKT,OAAL,CAAaU,IAAlB,EAAwB;AACtB,WAAKC,IAAL;AACD;AACF;;qBAEDC,Q,uBAAmB;AACjB,WAAO,KAAKZ,OAAL,CAAaQ,KAApB;AACD,G;;qBAEKG,I;;;;;;;;mBACA,KAAKE,c;;;;;+CACA,KAAKA,c;;;;AAGd,mBAAKA,cAAL,GAAsB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAAA,oBACrCf,OADqC,GACzB,KADyB,CACrCA,OADqC;;;AAG7CgB,uBAAOC,WAAP,GAAqB,YAAM;AACzBD,yBAAOE,EAAP,CAAUP,IAAV,CAAe;AACbH,2BAAOR,QAAQQ,KADF;AAEbN,6BAASF,QAAQE,OAFJ;AAGbC,4BAAQH,QAAQG,MAHH;AAIbC,4BAAQJ,QAAQI,MAJH;AAKbC,2BAAOL,QAAQK,KALF;AAMbE,0CAAsB,MAAKA;AANd,mBAAf;;AASAQ,0BAAQC,OAAOE,EAAf;AACD,iBAXD;;AAaA,oBAAMC,MAAMH,OAAOI,QAAP,CAAgBC,oBAAhB,CAAqC,QAArC,EAA+C,CAA/C,CAAZ;AACA,oBAAI,CAACF,GAAL,EAAU;AACR;AACD;;AAED,oBAAIH,OAAOI,QAAP,CAAgBE,cAAhB,CAA+B,gBAA/B,CAAJ,EAAsD;AACpD;AACD;;AAED,oBAAMC,KAAKP,OAAOI,QAAP,CAAgBI,aAAhB,CAA8B,QAA9B,CAAX;AACAD,mBAAGE,EAAH,GAAQ,gBAAR;AACAF,mBAAGG,KAAH,GAAW,IAAX;AACAH,mBAAGI,GAAH,gBAAoB3B,QAAQC,MAA5B,SAAsCD,QAAQM,QAA9C;;AAEAa,oBAAIS,UAAJ,CAAeC,YAAf,CAA4BN,EAA5B,EAAgCJ,GAAhC;AACD,eA/BqB,CAAtB;;+CAiCO,KAAKN,c;;;;;;;;;;;;;;;;;qBAGRiB,O;2GAAQC,M;UAAQC,M,uEAAS,E;UAAIC,K,uEAAQ,E;;;;;;;qBACxB,KAAKtB,IAAL,E;;;AAAXuB,gB;gDAEC,IAAIpB,OAAJ,CAAY,UAACC,OAAD,EAAUoB,MAAV,EAAqB;AACtCD,mBAAGH,MAAH,YAAcC,MAAd,SAAsB,UAACI,QAAD,EAAc;AAClC,sBAAI,CAACA,QAAL,EAAe;AACbD,2BAAO,IAAI1B,KAAJ,CAAU,uBAAV,CAAP;AACD,mBAFD,MAEO,IAAI2B,SAASC,KAAb,EAAoB;AAAA,0CACOD,SAASC,KADhB;AAAA,wBACjBC,IADiB,mBACjBA,IADiB;AAAA,wBACXC,IADW,mBACXA,IADW;AAAA,wBACLC,OADK,mBACLA,OADK;;;AAGzB,wBAAMH,QAAQ,IAAI5B,KAAJ,CAAU+B,OAAV,CAAd;AACAH,0BAAMC,IAAN,GAAaA,IAAb;AACAD,0BAAME,IAAN,GAAaA,IAAb;;AAEAJ,2BAAOE,KAAP;AACD,mBARM,MAQA;AACLtB,4BAAQqB,QAAR;AACD;AACF,iBAdD,GAcMH,KAdN;AAeD,eAhBM,C;;;;;;;;;;;;;;;;;qBAmBHQ,E;2GAAGzC,O;;;;;gDACA,KAAK8B,OAAL,CAAa,IAAb,EAAmB,CAAC9B,OAAD,CAAnB,C;;;;;;;;;;;;;;;;;qBAGH0C,G;2GAAIC,I;UAAMZ,M,uEAASpC,OAAOC,G;UAAKgD,M,uEAAS,E;;;;;gDACrC,KAAKd,OAAL,CAAa,KAAb,EAAoB,CAACa,IAAD,EAAOZ,MAAP,EAAea,MAAf,CAApB,C;;;;;;;;;;;;;;;;;qBAGHC,K;;UAAMC,I,uEAAO,I;;;;;gDACV,KAAKhB,OAAL,CAAa,OAAb,EAAsB,EAAtB,EAA0B,CAACgB,IAAD,CAA1B,C;;;;;;;;;;;;;;;;;qBAGHC,M;;;;;;gDACG,KAAKjB,OAAL,CAAa,QAAb,C;;;;;;;;;;;;;;;;;qBAGHkB,c;;;;;;gDACG,KAAKlB,OAAL,CAAa,gBAAb,C;;;;;;;;;;;;;;;;;qBAGHmB,e;;;;;;gDACG,KAAKnB,OAAL,CAAa,iBAAb,C;;;;;;;;;;;;;;;;;qBAGHoB,c;;;;;;;;qBACmB,KAAKF,cAAL,E;;;AAAjBZ,sB;;oBACFA,SAAShC,MAAT,KAAoB+C,sBAAYC,SAAhC,IAA6ChB,SAASiB,Y;;;;;gDACjDjB,SAASiB,Y;;;oBAGZ,IAAI5C,KAAJ,CAAU,oBAAV,C;;;;;;;;;;;;;;;;;qBAGF6C,U;6GAAWV,M;;;;;iDACR,KAAKF,GAAL,CAAS,KAAT,EAAgB/C,OAAOC,GAAvB,EAA4BgD,MAA5B,C;;;;;;;;;;;;;;;;;qBAGHW,yB;6GAA0BX,M;;;;;;;qBACJ,KAAKM,cAAL,E;;;AAApBM,yB;;qBACgB,KAAKF,UAAL,CAAgBV,MAAhB,C;;;AAAhBa,qB;iDAEC;AACLA,gCADK;AAELD;AAFK,e;;;;;;;;;;;;;;;;;qBAMHE,Q;;;;;;;;qBACuB,KAAKR,cAAL,E;;;AAArBG,0B;iDACCA,aAAaM,W;;;;;;;;;;;;;;;;;qBAGhBC,S;;;;;;;;qBACuB,KAAKV,cAAL,E;;;AAArBG,0B;iDACCA,aAAaQ,M;;;;;;;;;;;;;;;;;qBAGhBC,U;6GAAWC,E,EAAI/D,O;;;;;iDACZ,KAAKyC,EAAL;AACLsB,sBADK;AAELhC,wBAAQ;AAFH,iBAGF/B,OAHE,E;;;;;;;;;;;;;;;;;qBAQHgE,U;6GAAWC,W,EAAaC,Q,EAAUC,Q,EAAUC,W,EAAaC,W;;;;;;AACzDC,iB,YAAaL,W,SAAeC,Q,SAAYC,Q,SAAYI,mBAAmBH,WAAnB,C;;;AAExD,kBAAIC,gBAAgB,IAApB,EAA0B;AACxBC,uBAAO,qBAAP;AACD;;iDAEM,KAAK5B,GAAL,CAAS4B,GAAT,EAAc3E,OAAOE,IAArB,C;;;;;;;;;;;;;;;;;qBAGH2E,c;;;;;;;;qBACmB,KAAK9B,GAAL,CAAS,iBAAT,C;;;AAAjBN,sB;iDACCA,SAASqC,I;;;;;;;;;;;;;;;;;qBAGZC,c;6GAAeC,W;;;;;;;qBACY,KAAKH,cAAL,E;;;AAAzBI,8B;AAEAC,+B,GAAoBF,YAAYG,MAAZ,CAAmB,UAACC,CAAD,EAAO;AAClD,oBAAMC,oBAAoBJ,iBAAiBK,IAAjB,CAAsB,UAACC,GAAD,EAAS;AAAA,sBAC/CC,UAD+C,GACxBD,GADwB,CAC/CC,UAD+C;AAAA,sBACnC/E,MADmC,GACxB8E,GADwB,CACnC9E,MADmC;;AAEvD,yBAAOA,WAAW,SAAX,IAAwB+E,eAAeJ,CAA9C;AACD,iBAHyB,CAA1B;;AAKA,uBAAO,CAAC,CAACC,iBAAT;AACD,eAPyB,C;iDASnBH,kBAAkBO,MAAlB,KAA6BT,YAAYS,M;;;;;;;;;;;;;;;;;qBAG5CC,S;6GAAUC,S,EAAWC,Q;;;;;;;qBACR,KAAK5E,IAAL,E;;;AAAXuB,gB;;AACNA,iBAAGsD,KAAH,CAASH,SAAT,CAAmBC,SAAnB,EAA8BC,QAA9B;;;;;;;;;;;;;;;;;qBAGIE,W;6GAAYH,S,EAAWC,Q;;;;;;;qBACV,KAAK5E,IAAL,E;;;AAAXuB,gB;;AACNA,iBAAGsD,KAAH,CAASC,WAAT,CAAqBH,SAArB,EAAgCC,QAAhC;;;;;;;;;;;;;;;;;qBAGIG,K;6GAAM9D,U;;;;;;;qBACO,KAAKjB,IAAL,E;;;AAAXuB,gB;;;AAEN,kBAAI,OAAON,UAAP,KAAsB,WAA1B,EAAuC;AACrCM,mBAAGyD,KAAH,CAASD,KAAT;AACD,eAFD,MAEO;AACLxD,mBAAGyD,KAAH,CAASD,KAAT,CAAe9D,UAAf;AACD;;;;;;;;;;;;;;;;;qBAGGgE,W;;;;;;iDACG,KAAKlD,GAAL,CAAS,iBAAT,C;;;;;;;;;;;;;;;;;qBAGHmD,a;6GAAcC,S;;;;;iDACX,KAAKpD,GAAL,CAASoD,SAAT,EAAoBnG,OAAOG,MAA3B,C;;;;;;;;;;;;;;;;;qBAGHiG,W;;;;;;;;qBACa,KAAKpF,IAAL,E;;;AAAXuB,gB;;AACNA,iBAAG8D,MAAH,CAAUD,WAAV;;;;;;;;;;;;;;;;;qBAGIE,S;6GAAUC,O;UAASC,Q,uEAAW,C;;;;;iDAC3B,KAAK1D,EAAL,CAAQ;AACbV,wBAAQ,KADK;AAEbqE,wBAAQ,cAFK;AAGbF,gCAHa;AAIbC;AAJa,eAAR,C;;;;;;;;;;;;;;;;;qBAQHE,G;6GAAIH,O,EAASlG,O;;;;;iDACV,KAAKyC,EAAL;AACLV,wBAAQ,KADH;AAELqE,wBAAQ,cAFH;AAGLF;AAHK,iBAIFlG,OAJE,E;;;;;;;;;;;;;;;;;;;;AASX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBA7OqBD,Q","file":"Facebook.js","sourcesContent":["// @flow\nimport LoginStatus from './constants/LoginStatus';\n\nexport const Method = {\n  GET: 'get',\n  POST: 'post',\n  DELETE: 'delete',\n};\n\nexport default class Facebook {\n  constructor(options = {}) {\n    this.options = {\n      domain: 'connect.facebook.net',\n      version: 'v3.1',\n      cookie: false,\n      status: false,\n      xfbml: false,\n      language: 'en_US',\n      frictionlessRequests: false,\n      ...options,\n    };\n\n    if (!this.options.appId) {\n      throw new Error('You need to set appId');\n    }\n\n    if (!this.options.wait) {\n      this.init();\n    }\n  }\n\n  getAppId(): string {\n    return this.options.appId;\n  }\n\n  async init() {\n    if (this.loadingPromise) {\n      return this.loadingPromise;\n    }\n\n    this.loadingPromise = new Promise((resolve) => {\n      const { options } = this;\n\n      window.fbAsyncInit = () => {\n        window.FB.init({\n          appId: options.appId,\n          version: options.version,\n          cookie: options.cookie,\n          status: options.status,\n          xfbml: options.xfbml,\n          frictionlessRequests: this.frictionlessRequests,\n        });\n\n        resolve(window.FB);\n      };\n\n      const fjs = window.document.getElementsByTagName('script')[0];\n      if (!fjs) {\n        return;\n      }\n\n      if (window.document.getElementById('facebook-jssdk')) {\n        return;\n      }\n\n      const js = window.document.createElement('script');\n      js.id = 'facebook-jssdk';\n      js.async = true;\n      js.src = `https://${options.domain}/${options.language}/sdk.js`;\n\n      fjs.parentNode.insertBefore(js, fjs);\n    });\n\n    return this.loadingPromise;\n  }\n\n  async process(method, before = [], after = []) {\n    const fb = await this.init();\n\n    return new Promise((resolve, reject) => {\n      fb[method](...before, (response) => {\n        if (!response) {\n          reject(new Error('Response is undefined'));\n        } else if (response.error) {\n          const { code, type, message } = response.error;\n\n          const error = new Error(message);\n          error.code = code;\n          error.type = type;\n\n          reject(error);\n        } else {\n          resolve(response);\n        }\n      }, ...after);\n    });\n  }\n\n  async ui(options) {\n    return this.process('ui', [options]);\n  }\n\n  async api(path, method = Method.GET, params = {}) {\n    return this.process('api', [path, method, params]);\n  }\n\n  async login(opts = null) {\n    return this.process('login', [], [opts]);\n  }\n\n  async logout() {\n    return this.process('logout');\n  }\n\n  async getLoginStatus() {\n    return this.process('getLoginStatus');\n  }\n\n  async getAuthResponse() {\n    return this.process('getAuthResponse');\n  }\n\n  async getTokenDetail() {\n    const response = await this.getLoginStatus();\n    if (response.status === LoginStatus.CONNECTED && response.authResponse) {\n      return response.authResponse;\n    }\n\n    throw new Error('Token is undefined');\n  }\n\n  async getProfile(params) {\n    return this.api('/me', Method.GET, params);\n  }\n\n  async getTokenDetailWithProfile(params) {\n    const tokenDetail = await this.getTokenDetail();\n    const profile = await this.getProfile(params);\n\n    return {\n      profile,\n      tokenDetail,\n    };\n  }\n\n  async getToken() {\n    const authResponse = await this.getTokenDetail();\n    return authResponse.accessToken;\n  }\n\n  async getUserId() {\n    const authResponse = await this.getTokenDetail();\n    return authResponse.userID;\n  }\n\n  async sendInvite(to, options) {\n    return this.ui({\n      to,\n      method: 'apprequests',\n      ...options,\n    });\n  }\n\n\n  async postAction(ogNamespace, ogAction, ogObject, ogObjectUrl, noFeedStory) {\n    let url = `/me/${ogNamespace}:${ogAction}?${ogObject}=${encodeURIComponent(ogObjectUrl)}`;\n\n    if (noFeedStory === true) {\n      url += '&no_feed_story=true';\n    }\n\n    return this.api(url, Method.POST);\n  }\n\n  async getPermissions() {\n    const response = await this.api('/me/permissions');\n    return response.data;\n  }\n\n  async hasPermissions(permissions) {\n    const usersPermissions = await this.getPermissions();\n\n    const findedPermissions = permissions.filter((p) => {\n      const currentPermission = usersPermissions.find((row) => {\n        const { permission, status } = row;\n        return status === 'granted' && permission === p;\n      });\n\n      return !!currentPermission;\n    });\n\n    return findedPermissions.length === permissions.length;\n  }\n\n  async subscribe(eventName, callback) {\n    const fb = await this.init();\n    fb.Event.subscribe(eventName, callback);\n  }\n\n  async unsubscribe(eventName, callback) {\n    const fb = await this.init();\n    fb.Event.unsubscribe(eventName, callback);\n  }\n\n  async parse(parentNode) {\n    const fb = await this.init();\n\n    if (typeof parentNode === 'undefined') {\n      fb.XFBML.parse();\n    } else {\n      fb.XFBML.parse(parentNode);\n    }\n  }\n\n  async getRequests() {\n    return this.api('/me/apprequests');\n  }\n\n  async removeRequest(requestID) {\n    return this.api(requestID, Method.DELETE);\n  }\n\n  async setAutoGrow() {\n    const fb = await this.init();\n    fb.Canvas.setAutoGrow();\n  }\n\n  async paySimple(product, quantity = 1) {\n    return this.ui({\n      method: 'pay',\n      action: 'purchaseitem',\n      product,\n      quantity,\n    });\n  }\n\n  async pay(product, options) {\n    return this.ui({\n      method: 'pay',\n      action: 'purchaseitem',\n      product,\n      ...options,\n    });\n  }\n}\n\n/*\n  sendToFriends: function(options, callback) {\n    if(!options) {\n      options = {};\n    }\n\n    options.method = 'send';\n\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.ui(options, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  sendMessage: function(message, name, caption, description, url, imgUrl, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.ui({\n        method: 'stream.publish',\n        message: message,\n        attachment: {\n          name: name,\n          caption: caption,\n          description: description,\n          href: url,\n          media:[{\n            type: 'image',\n            src:  imgUrl,\n            href: url\n          }]\n        },\n        action_links: [{\n          text: 'Code',\n          href: url\n        }],\n        user_prompt_message: message\n      },\n      function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  sendInviteForm: function(options, callback) {\n    if(typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      options.method = options.method || 'apprequests';\n\n\n      FB.ui(options, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  checkPageLike: function(pageID, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      fbApi.getUserID(function(err, userID) {\n        if(err) {\n          return callback(err);\n        }\n\n        var fqlQuery = `SELECT uid FROM page_fan WHERE page_id = ${pageID} and uid = ${userID}`;\n        var query = FB.Data.query(fqlQuery);\n\n        query.wait(function(rows) {\n          if (rows.length === 1 && rows[0].uid === userID) {\n            callback(null, true, query);\n          }\n          else {\n            callback(null, false, query);\n          }\n        });\n      });\n    });\n  },\n\n  sendMessageToFriend: function (friendID, link, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.ui({\n        to: friendID,\n        method: 'send',\n        link: link\n      }, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  _prepareUsers: function(data) {\n    var users=[];\n\n    for(var index in data) {\n      var userData=data[index];\n\n      var user = {\n        provider_uid: 'facebook'+'_'+userData.uid,\n        provider: 'facebook',\n        id: userData.uid,\n        name: userData.name,\n        first_name: userData.first_name,\n        last_name: userData.last_name,\n        status: (userData.status!==null) ? userData.status : null,\n        image: '//graph.facebook.com/'+userData.uid+'/picture?'\n      };\n\n      users.push(user);\n    }\n\n    return users;\n  },\n\n  getUserList: function(callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('fql', {\n        q: `\n          SELECT uid, name, first_name, last_name, online_presence, status\n          FROM user\n          WHERE uid IN\n            ( SELECT uid2 FROM friend WHERE uid1 = me()) ORDER BY name\n        `,\n      }, function (response)\n      {\n        var users = fbApi._prepareUsers(response.data);\n        callback(null, users, response);\n      });\n    });\n  },\n\n  postFeed: function(options, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      options.method='feed';\n\n      FB.ui(options, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //need publish_stream\n  createAlbum: function(name, description, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/me/albums', 'post', {\n        name: name,\n        description: description\n      },function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //need publish_stream\n  addImageToAlbum: function(albumID, imageURL, message, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/'+albumID+'/photos', 'post', {\n        message: message,\n        url: imageURL\n      }, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'user_photos'\n  getAlbums: function(callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/me/albums', function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'user_photos'\n  getAlbumPhotos: function(albumID, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/'+albumID+'/photos', function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'user_photos'\n  getAlbumCoverPicture: function(albumID, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/'+albumID+'/picture', function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'publish_stream'\n  postPhoto: function(photoUrl, message, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/me/photos', 'post', {\n        message: message,\n        url: photoUrl\n      },function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  getPageInfo: function(callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.Canvas.getPageInfo(function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  }\n*/\n"]}