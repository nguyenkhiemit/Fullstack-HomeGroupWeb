{"version":3,"sources":["../src/Login.jsx"],"names":["Login","handleClick","evn","preventDefault","props","handleProcess","onCompleted","onError","api","scope","fields","returnScopes","rerequest","reauthorize","eventKey","loginQpts","authType","return_scopes","push","length","auth_type","join","login","response","status","Error","getTokenDetailWithProfile","data","render","children","loading","error","Component","defaultProps","Fields","undefined","ref"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;;;IAkBMA,K;;;;;;;;;;;;;;0JAYJC,W;0FAAc,kBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACZA,oBAAIC,cAAJ;;AADY,8BAGoC,MAAKC,KAHzC,EAGJC,aAHI,eAGJA,aAHI,EAGWC,WAHX,eAGWA,WAHX,EAGwBC,OAHxB,eAGwBA,OAHxB;AAAA;AAAA;AAAA,uBAMJF;AAAA,uGAAc,iBAAOG,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,2CAGd,MAAKJ,KAHS,EAEhBK,KAFgB,gBAEhBA,KAFgB,EAETC,MAFS,gBAETA,MAFS,EAEDC,YAFC,gBAEDA,YAFC,EAEaC,SAFb,gBAEaA,SAFb,EAEwBC,WAFxB,gBAEwBA,WAFxB,EAEqCC,QAFrC,gBAEqCA,QAFrC;AAIZC,qCAJY,GAIA,EAAEN,YAAF,EAJA;AAKZO,oCALY,GAKD,EALC;;;AAOlB,gCAAIL,YAAJ,EAAkB;AAChBI,wCAAUE,aAAV,GAA0B,IAA1B;AACD;;AAED,gCAAIL,SAAJ,EAAe;AACbI,uCAASE,IAAT,CAAc,WAAd;AACD;;AAED,gCAAIL,WAAJ,EAAiB;AACfG,uCAASE,IAAT,CAAc,gBAAd;AACD;;AAED,gCAAIF,SAASG,MAAb,EAAqB;AACnBJ,wCAAUK,SAAV,GAAsBJ,SAASK,IAAT,CAAc,GAAd,CAAtB;AACD;;AArBiB;AAAA,mCAuBKb,IAAIc,KAAJ,CAAUP,SAAV,CAvBL;;AAAA;AAuBZQ,oCAvBY;;AAAA,kCAwBdA,SAASC,MAAT,KAAoB,WAxBN;AAAA;AAAA;AAAA;;AAAA,kCAyBV,IAAIC,KAAJ,CAAU,mBAAV,CAzBU;;AAAA;AAAA;AAAA,mCA4BCjB,IAAIkB,yBAAJ,CAA8B,EAAEhB,cAAF,EAA9B,CA5BD;;AAAA;AA4BZiB,gCA5BY;;AAAA,iCA8BdrB,WA9Bc;AAAA;AAAA;AAAA;;AAAA;AAAA,mCA+BVA,uCACDqB,IADC;AAEJb;AAFI,+BA/BU;;AAAA;AAAA,6DAqCXa,IArCW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAd;;AAAA;AAAA;AAAA;AAAA,oBANI;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AA8CV,oBAAIpB,OAAJ,EAAa;AACXA;AACD;;AAhDS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;kBAoDdqB,M,qBAAS;AAAA,iBAGH,KAAKxB,KAHF;AAAA,QAELyB,QAFK,UAELA,QAFK;AAAA,QAEKC,OAFL,UAEKA,OAFL;AAAA,QAEcC,KAFd,UAEcA,KAFd;AAAA,QAEqBJ,IAFrB,UAEqBA,IAFrB;;;AAKP,WAAOE,SAAS;AACdC,sBADc;AAEd7B,mBAAa,KAAKA,WAFJ;AAGd8B,kBAHc;AAIdJ;AAJc,KAAT,CAAP;AAMD,G;;;EA3EiBK,gB,UACXC,Y,GAAe;AACpBxB,SAAO,EADa;AAEpBC,UAAQwB,gBAFY;AAGpBvB,gBAAc,KAHM;AAIpBC,aAAW,KAJS;AAKpBC,eAAa,KALO;AAMpBP,eAAa6B,SANO;AAOpB5B,WAAS4B,SAPW;AAQpBrB,YAAUqB;AARU,C;kBA6ET,uBAAW,UAAC/B,KAAD,EAAQgC,GAAR;AAAA,SACxB;AAAC,qBAAD;AAAA;AACG;AAAA,UACCN,OADD,SACCA,OADD;AAAA,UACUzB,aADV,SACUA,aADV;AAAA,UACyBsB,IADzB,SACyBA,IADzB;AAAA,UAC+BI,KAD/B,SAC+BA,KAD/B;AAAA,aAGC,8BAAC,KAAD,6BACM3B,KADN;AAEE,iBAAS0B,OAFX;AAGE,uBAAezB,aAHjB;AAIE,cAAMsB,IAJR;AAKE,eAAOI,KALT;AAME,aAAKK;AANP,SAHD;AAAA;AADH,GADwB;AAAA,CAAX,C","file":"Login.js","sourcesContent":["// @flow\nimport React, { Component, forwardRef } from 'react';\nimport Process from './Process';\nimport Fields from './constants/Fields';\n\ntype Props = {\n  children: Function,\n  handleProcess: Function,\n  loading: boolean,\n  data: any,\n  error: Error,\n  scope?: string,\n  fields?: string[],\n  returnScopes?: boolean,\n  rerequest?: boolean,\n  reauthorize?: boolean,\n  onCompleted?: Function,\n  onError?: Function,\n  eventKey?: any,\n};\n\nclass Login extends Component<Props> {\n  static defaultProps = {\n    scope: '',\n    fields: Fields,\n    returnScopes: false,\n    rerequest: false,\n    reauthorize: false,\n    onCompleted: undefined,\n    onError: undefined,\n    eventKey: undefined,\n  };\n\n  handleClick = async (evn) => {\n    evn.preventDefault();\n\n    const { handleProcess, onCompleted, onError } = this.props;\n\n    try {\n      await handleProcess(async (api) => {\n        const {\n          scope, fields, returnScopes, rerequest, reauthorize, eventKey,\n        } = this.props;\n        const loginQpts = { scope };\n        const authType = [];\n\n        if (returnScopes) {\n          loginQpts.return_scopes = true;\n        }\n\n        if (rerequest) {\n          authType.push('rerequest');\n        }\n\n        if (reauthorize) {\n          authType.push('reauthenticate');\n        }\n\n        if (authType.length) {\n          loginQpts.auth_type = authType.join(',');\n        }\n\n        const response = await api.login(loginQpts);\n        if (response.status !== 'connected') {\n          throw new Error('Unauthorized user');\n        }\n\n        const data = await api.getTokenDetailWithProfile({ fields });\n\n        if (onCompleted) {\n          await onCompleted({\n            ...data,\n            eventKey,\n          });\n        }\n\n        return data;\n      });\n    } catch (error) {\n      if (onError) {\n        onError(error);\n      }\n    }\n  }\n\n  render() {\n    const {\n      children, loading, error, data,\n    } = this.props;\n\n    return children({\n      loading,\n      handleClick: this.handleClick,\n      error,\n      data,\n    });\n  }\n}\n\nexport default forwardRef((props, ref) => (\n  <Process>\n    {({\n      loading, handleProcess, data, error,\n    }) => (\n      <Login\n        {...props}\n        loading={loading}\n        handleProcess={handleProcess}\n        data={data}\n        error={error}\n        ref={ref}\n      />\n    )}\n  </Process>\n));\n"]}