{"version":3,"sources":["../src/Parser.jsx"],"names":["Parser","Component","state","handleReady","api","setState","handleParse","handleContainer","container","parse","render","className","children","props","defaultProps","undefined"],"mappings":";;;;;;AACA;;;;AACA;;;;;;AAYe,MAAMA,MAAN,SAAqBC,gBAArB,CAA6C;AAAA;AAAA;;AAAA,wCAK1DC,KAL0D,GAK3C,EAL2C,OAO1DC,WAP0D,GAO3CC,GAAD,IAAuB;AACnC,WAAKC,QAAL,CAAc;AACZD;AADY,OAAd,EAEG,KAAKE,WAFR;AAGD,KAXyD,OAa1DC,eAb0D,GAavCC,SAAD,IAA2B;AAC3C,WAAKH,QAAL,CAAc;AACZG;AADY,OAAd,EAEG,KAAKF,WAFR;AAGD,KAjByD,OAmB1DA,WAnB0D,GAmB5C,MAAY;AACxB,YAAM,EAAEF,GAAF,EAAOI,SAAP,KAAqB,KAAKN,KAAhC;AACA,UAAI,CAACE,GAAD,IAAQ,CAACI,SAAb,EAAwB;AACtB;AACD;;AAEDJ,UAAIK,KAAJ,CAAUD,SAAV;AACD,KA1ByD;AAAA;;AA4B1DE,WAAS;AACP,UAAM,EAAEC,SAAF,EAAaC,QAAb,KAA0B,KAAKC,KAArC;;AAEA,WACE;AAAA;AAAA,QAAK,WAAWF,SAAhB,EAA2B,KAAK,KAAKJ,eAArC;AACE;AAAC,4BAAD;AAAA,UAAY,SAAS,KAAKJ,WAA1B;AACGS,iBAAS;AACRN,uBAAa,KAAKA;AADV,SAAT;AADH;AADF,KADF;AASD;AAxCyD;kBAAvCN,M;AAAAA,M,CACZc,Y,GAAe;AACpBH,aAAWI;AADS,C","file":"Parser.js","sourcesContent":["// @flow\nimport React, { Component, type Node } from 'react';\nimport Initialize from './Initialize';\n\ntype Props = {\n  className?: string,\n  children: Function,\n};\n\ntype State = {\n  api?: Object,\n  container?: Node,\n};\n\nexport default class Parser extends Component<Props, State> {\n  static defaultProps = {\n    className: undefined,\n  };\n\n  state: State = {};\n\n  handleReady = (api: Object): void => {\n    this.setState({\n      api,\n    }, this.handleParse);\n  }\n\n  handleContainer = (container: Node): void => {\n    this.setState({\n      container,\n    }, this.handleParse);\n  }\n\n  handleParse = (): void => {\n    const { api, container } = this.state;\n    if (!api || !container) {\n      return;\n    }\n\n    api.parse(container);\n  }\n\n  render() {\n    const { className, children } = this.props;\n\n    return (\n      <div className={className} ref={this.handleContainer}>\n        <Initialize onReady={this.handleReady}>\n          {children({\n            handleParse: this.handleParse,\n          })}\n        </Initialize>\n      </div>\n    );\n  }\n}\n"]}