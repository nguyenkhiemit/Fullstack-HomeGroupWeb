{"version":3,"sources":["../src/Subscribe.jsx"],"names":["LoginStatus","Component","componentWillUnmount","state","api","props","event","unsubscribe","handleChange","render","children","handleReady","defaultProps","onChange","undefined","setState","subscribe","args"],"mappings":";;;;;;;;;;AACA;;;;AACA;;;;;;AAYe,MAAMA,WAAN,SAA0BC,gBAA1B,CAAkD;AAAA;AAAA;;AAAA;AAAA;;AAO/DC,yBAAuB;AACrB,UAAM,EAAEC,OAAO,EAAEC,GAAF,EAAT,EAAkBC,OAAO,EAAEC,KAAF,EAAzB,KAAuC,IAA7C;AACA,QAAIF,GAAJ,EAAS;AACPA,UAAIG,WAAJ,CAAgBD,KAAhB,EAAuB,KAAKE,YAA5B;AACD;AACF;;AAoBDC,WAAS;AACP,UAAM,EAAEC,QAAF,KAAe,KAAKL,KAA1B;;AAEA,WACE;AAAC,0BAAD;AAAA,QAAY,SAAS,KAAKM,WAA1B;AACGD;AADH,KADF;AAKD;AAxC8D;kBAA5CV,W;AAAAA,W,CACZY,Y,GAAe;AACpBC,YAAUC;AADU,C;;;;;OAItBX,K,GAAe,E;;OASfQ,W;+CAAc,WAAOP,GAAP,EAAsC;AAClD,YAAM,EAAEE,KAAF,KAAY,MAAKD,KAAvB;;AAEA,YAAKU,QAAL,CAAc;AACZX;AADY,OAAd;;AAIA,YAAMA,IAAIY,SAAJ,CAAcV,KAAd,EAAqB,MAAKE,YAA1B,CAAN;AACD,K;;;;;;;OAEDA,Y,GAAe,CAAC,GAAGS,IAAJ,KAAmB;AAChC,UAAM,EAAEJ,QAAF,KAAe,KAAKR,KAA1B;;AAEA,QAAIQ,QAAJ,EAAc;AACZA,eAAS,GAAGI,IAAZ;AACD;AACF,G","file":"Subscribe.js","sourcesContent":["// @flow\nimport React, { Component, type Node } from 'react';\nimport Initialize from './Initialize';\n\ntype Props = {\n  children: Node,\n  onChange?: Function,\n  event: string,\n};\n\ntype State = {\n  api?: Object,\n};\n\nexport default class LoginStatus extends Component<Props, State> {\n  static defaultProps = {\n    onChange: undefined,\n  };\n\n  state: State = {};\n\n  componentWillUnmount() {\n    const { state: { api }, props: { event } } = this;\n    if (api) {\n      api.unsubscribe(event, this.handleChange);\n    }\n  }\n\n  handleReady = async (api: Object): Promise<void> => {\n    const { event } = this.props;\n\n    this.setState({\n      api,\n    });\n\n    await api.subscribe(event, this.handleChange);\n  }\n\n  handleChange = (...args): void => {\n    const { onChange } = this.props;\n\n    if (onChange) {\n      onChange(...args);\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <Initialize onReady={this.handleReady}>\n        {children}\n      </Initialize>\n    );\n  }\n}\n"]}