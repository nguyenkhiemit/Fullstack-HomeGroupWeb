{"ast":null,"code":"import _defineProperty from \"/Users/apple/(Develop)E/SourceCode/FrontEnd/Reactjs/homegroup-admin/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/apple/(Develop)E/SourceCode/FrontEnd/Reactjs/homegroup-admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/apple/(Develop)E/SourceCode/FrontEnd/Reactjs/homegroup-admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/apple/(Develop)E/SourceCode/FrontEnd/Reactjs/homegroup-admin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/apple/(Develop)E/SourceCode/FrontEnd/Reactjs/homegroup-admin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/apple/(Develop)E/SourceCode/FrontEnd/Reactjs/homegroup-admin/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/apple/(Develop)E/SourceCode/FrontEnd/Reactjs/homegroup-admin/src/pages/CreateProductPage/CreateProduct.js\";\nimport React, { Component } from 'react';\nimport { callApi } from \"../../utils/apiCaller\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport Alert from \"../../components/Alert/Alert\";\nimport './CreateProduct.css';\n\nvar CreateProduct =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateProduct, _Component);\n\n  function CreateProduct(props) {\n    var _this;\n\n    _classCallCheck(this, CreateProduct);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateProduct).call(this, props));\n\n    _this.handleChange = function (event) {\n      var target = event.target;\n      var value = target.value;\n\n      if (target.type === 'file') {\n        value = target.files;\n      } else if (target.type === 'checkbox') {\n        value = target.checked;\n      }\n\n      var name = target.name;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      console.log(_this.state);\n      var _this$state = _this.state,\n          projectName = _this$state.projectName,\n          category = _this$state.category,\n          investor = _this$state.investor,\n          address = _this$state.address,\n          area = _this$state.area,\n          time = _this$state.time,\n          isMain = _this$state.isMain,\n          file = _this$state.file;\n      var formData = new FormData();\n      formData.append('projectName', projectName);\n      formData.append('category', category);\n      formData.append('investor', investor);\n      formData.append('address', address);\n      formData.append('area', area);\n      formData.append('time', time);\n      formData.append('isMain', isMain);\n      formData.append('file', file);\n      var headers = {\n        'content-type': 'multipart/form-data'\n      };\n\n      _this.setState({\n        isLoading: true\n      });\n\n      callApi(\"product/uploads\", 'POST', formData, headers).then(function (res) {\n        NotificationManager.success('Success message', '', 1000, null, true);\n\n        _this.setState({\n          isLoading: false,\n          isDisplayAlert: true,\n          messageAlert: 'Tạo sảm phẩm thành công'\n        });\n      });\n    };\n\n    _this.handleDrop = function (files) {\n      // Push all the axios request promise into a single array\n      var uploaders = files.map(function (file) {\n        // Initial FormData\n        var formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"tags\", \"codeinfuse, medium, gist\");\n        formData.append(\"upload_preset\", \"pvhilzh7\"); // Replace the preset name with your own\n\n        formData.append(\"api_key\", \"1234567\"); // Replace API key with your own Cloudinary key\n\n        formData.append(\"timestamp\", Date.now() / 1000 | 0); // Make an AJAX upload request using Axios (replace Cloudinary URL below with your own)\n\n        return axios.post(\"https://api.cloudinary.com/v1_1/codeinfuse/image/upload\", formData, {\n          headers: {\n            \"X-Requested-With\": \"XMLHttpRequest\"\n          }\n        }).then(function (response) {\n          var data = response.data;\n          var fileURL = data.secure_url; // You should store this URL for future references in your app\n\n          console.log(data);\n        });\n      }); // Once all the files are uploaded\n\n      axios.all(uploaders).then(function () {// ... perform after upload is successful operation\n      });\n    };\n\n    _this.state = {\n      id: '',\n      projectName: '',\n      category: 0,\n      investor: '',\n      address: '',\n      area: '',\n      time: '',\n      isMain: false,\n      files: null,\n      isLoading: false,\n      isDisplayAlert: false,\n      messageAlert: ''\n    };\n    return _this;\n  }\n\n  _createClass(CreateProduct, [{\n    key: \"render\",\n    // handleSubmitAll = (event) => {\n    //     event.preventDefault();\n    //     console.log(this.state);\n    //     let {projectName, category, investor, address, area, time, isMain, files} = this.state;\n    //     this.setState({\n    //         isLoading: true\n    //     });\n    //     const uploaders = files.map(file => {\n    //         const formData = new FormData();\n    //         formData.append('projectName', projectName);\n    //         formData.append('category', category);\n    //         formData.append('investor', investor);\n    //         formData.append('address', address);\n    //         formData.append('area', area);\n    //         formData.append('time', time);\n    //         formData.append('isMain', isMain);\n    //         formData.append('file', file);\n    //         const headers = {\n    //             'content-type': 'multipart/form-data'\n    //         };\n    //         return callApi(\"product/uploads\", 'POST', formData, headers).then(res => {\n    //             const data = res.data;\n    //             console.log(data);\n    //         });\n    //     });\n    //     callApi(uploaders, 'all').then(res => {\n    //         NotificationManager.success('Success message', '', 1000, null, true);\n    //         this.setState({\n    //             isLoading: false,\n    //             isDisplayAlert: true,\n    //             messageAlert: 'Tạo sảm phẩm thành công'\n    //         });\n    //     });\n    // };\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Loading, {\n        isLoading: this.state.isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(Alert, {\n        isDisplay: this.state.isDisplayAlert,\n        message: this.state.messageAlert,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmitAll,\n        method: \"POST\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"D\\u1EF1 \\xE1n\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"projectName\",\n        value: this.state.projectName,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Th\\u1EC3 lo\\u1EA1i\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        name: \"category\",\n        value: this.state.category,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Thi\\u1EBFt k\\u1EBF n\\u1ED9i th\\u1EA5t\"), React.createElement(\"option\", {\n        value: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Thi c\\xF4ng n\\u1ED9i th\\u1EA5t\"))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Ch\\u1EE7 \\u0111\\u1EA7u t\\u01B0\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"investor\",\n        value: this.state.investor,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"\\u0110\\u1ECBa ch\\u1EC9\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"address\",\n        value: this.state.address,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Di\\u1EC7n t\\xEDch\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"area\",\n        value: this.state.area,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Th\\u1EDDi gian\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"time\",\n        value: this.state.time,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"form-check-input\",\n        name: \"isMain\",\n        checked: this.state.isMain,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Ti\\xEAu bi\\u1EC3u\")), React.createElement(\"div\", {\n        className: \"form-group mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        name: \"files\",\n        multiple: true,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"T\\u1EA1o d\\u1EF1 \\xE1n\"))));\n    }\n  }]);\n\n  return CreateProduct;\n}(Component);\n\nexport default CreateProduct;","map":{"version":3,"sources":["/Users/apple/(Develop)E/SourceCode/FrontEnd/Reactjs/homegroup-admin/src/pages/CreateProductPage/CreateProduct.js"],"names":["React","Component","callApi","Loading","NotificationContainer","NotificationManager","Alert","CreateProduct","props","handleChange","event","target","value","type","files","checked","name","setState","handleSubmit","preventDefault","console","log","state","projectName","category","investor","address","area","time","isMain","file","formData","FormData","append","headers","isLoading","then","res","success","isDisplayAlert","messageAlert","handleDrop","uploaders","map","Date","now","axios","post","response","data","fileURL","secure_url","all","id","handleSubmitAll"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,uBAAtB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAAQC,qBAAR,EAA+BC,mBAA/B,QAAyD,qBAAzD;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAO,qBAAP;;IAEMC,a;;;;;AAEF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,uFAAMA,KAAN;;AADe,UAkBnBC,YAlBmB,GAkBJ,UAACC,KAAD,EAAW;AACtB,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAIC,KAAK,GAAGD,MAAM,CAACC,KAAnB;;AACA,UAAGD,MAAM,CAACE,IAAP,KAAgB,MAAnB,EAA2B;AACvBD,QAAAA,KAAK,GAAGD,MAAM,CAACG,KAAf;AACH,OAFD,MAEO,IAAGH,MAAM,CAACE,IAAP,KAAgB,UAAnB,EAA+B;AAClCD,QAAAA,KAAK,GAAGD,MAAM,CAACI,OAAf;AACH;;AACD,UAAMC,IAAI,GAAGL,MAAM,CAACK,IAApB;;AACA,YAAKC,QAAL,qBACKD,IADL,EACYJ,KADZ;AAGH,KA9BkB;;AAAA,UAgCnBM,YAhCmB,GAgCJ,UAACR,KAAD,EAAW;AACtBA,MAAAA,KAAK,CAACS,cAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAjB;AAFsB,wBAGqD,MAAKA,KAH1D;AAAA,UAGjBC,WAHiB,eAGjBA,WAHiB;AAAA,UAGJC,QAHI,eAGJA,QAHI;AAAA,UAGMC,QAHN,eAGMA,QAHN;AAAA,UAGgBC,OAHhB,eAGgBA,OAHhB;AAAA,UAGyBC,IAHzB,eAGyBA,IAHzB;AAAA,UAG+BC,IAH/B,eAG+BA,IAH/B;AAAA,UAGqCC,MAHrC,eAGqCA,MAHrC;AAAA,UAG6CC,IAH7C,eAG6CA,IAH7C;AAKtB,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BV,WAA/B;AACAQ,MAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BT,QAA5B;AACAO,MAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BR,QAA5B;AACAM,MAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BP,OAA3B;AACAK,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBN,IAAxB;AACAI,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBL,IAAxB;AACAG,MAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BJ,MAA1B;AACAE,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,IAAxB;AACA,UAAMI,OAAO,GAAG;AACZ,wBAAgB;AADJ,OAAhB;;AAGA,YAAKjB,QAAL,CAAc;AACXkB,QAAAA,SAAS,EAAE;AADA,OAAd;;AAGAjC,MAAAA,OAAO,CAAC,iBAAD,EAAoB,MAApB,EAA4B6B,QAA5B,EAAsCG,OAAtC,CAAP,CAAsDE,IAAtD,CAA2D,UAAAC,GAAG,EAAI;AAC9DhC,QAAAA,mBAAmB,CAACiC,OAApB,CAA4B,iBAA5B,EAA+C,EAA/C,EAAmD,IAAnD,EAAyD,IAAzD,EAA+D,IAA/D;;AACA,cAAKrB,QAAL,CAAc;AACVkB,UAAAA,SAAS,EAAE,KADD;AAEVI,UAAAA,cAAc,EAAE,IAFN;AAGVC,UAAAA,YAAY,EAAE;AAHJ,SAAd;AAKH,OAPD;AAQH,KA5DkB;;AAAA,UA8DnBC,UA9DmB,GA8DN,UAAA3B,KAAK,EAAI;AAClB;AACA,UAAM4B,SAAS,GAAG5B,KAAK,CAAC6B,GAAN,CAAU,UAAAb,IAAI,EAAI;AAChC;AACA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,IAAxB;AACAC,QAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB;AACAF,QAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiC,UAAjC,EALgC,CAKc;;AAC9CF,QAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,SAA3B,EANgC,CAMO;;AACvCF,QAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA8BW,IAAI,CAACC,GAAL,KAAa,IAAd,GAAsB,CAAnD,EAPgC,CAShC;;AACA,eAAOC,KAAK,CAACC,IAAN,CAAW,yDAAX,EAAsEhB,QAAtE,EAAgF;AACnFG,UAAAA,OAAO,EAAE;AAAE,gCAAoB;AAAtB;AAD0E,SAAhF,EAEJE,IAFI,CAEC,UAAAY,QAAQ,EAAI;AAChB,cAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,cAAMC,OAAO,GAAGD,IAAI,CAACE,UAArB,CAFgB,CAEgB;;AAChC/B,UAAAA,OAAO,CAACC,GAAR,CAAY4B,IAAZ;AACH,SANM,CAAP;AAOH,OAjBiB,CAAlB,CAFkB,CAqBlB;;AACAH,MAAAA,KAAK,CAACM,GAAN,CAAUV,SAAV,EAAqBN,IAArB,CAA0B,YAAM,CAC5B;AACH,OAFD;AAGH,KAvFkB;;AAEf,UAAKd,KAAL,GAAa;AACT+B,MAAAA,EAAE,EAAE,EADK;AAET9B,MAAAA,WAAW,EAAE,EAFJ;AAGTC,MAAAA,QAAQ,EAAE,CAHD;AAITC,MAAAA,QAAQ,EAAE,EAJD;AAKTC,MAAAA,OAAO,EAAE,EALA;AAMTC,MAAAA,IAAI,EAAE,EANG;AAOTC,MAAAA,IAAI,EAAE,EAPG;AAQTC,MAAAA,MAAM,EAAE,KARC;AASTf,MAAAA,KAAK,EAAE,IATE;AAUTqB,MAAAA,SAAS,EAAE,KAVF;AAWTI,MAAAA,cAAc,EAAE,KAXP;AAYTC,MAAAA,YAAY,EAAE;AAZL,KAAb;AAFe;AAgBlB;;;;AAyED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAES;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAE,KAAKlB,KAAL,CAAWa,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,KAAKb,KAAL,CAAWiB,cAA7B;AAA6C,QAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWkB,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,QAAQ,EAAE,KAAKc,eAArB;AAAsC,QAAA,MAAM,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,IAAI,EAAC,aAAjD;AAA+D,QAAA,KAAK,EAAE,KAAKhC,KAAL,CAAWC,WAAjF;AAA8F,QAAA,QAAQ,EAAE,KAAKd,YAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AACI,QAAA,SAAS,EAAC,cADd;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,KAAK,EAAE,KAAKa,KAAL,CAAWE,QAHtB;AAII,QAAA,QAAQ,EAAE,KAAKf,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI;AAAQ,QAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDALJ,EAMI;AAAQ,QAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CANJ,CAFJ,CALJ,EAgBI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,IAAI,EAAC,UAAjD;AAA4D,QAAA,KAAK,EAAE,KAAKa,KAAL,CAAWG,QAA9E;AAAwF,QAAA,QAAQ,EAAE,KAAKhB,YAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAhBJ,EAoBI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,IAAI,EAAC,SAAjD;AAA2D,QAAA,KAAK,EAAE,KAAKa,KAAL,CAAWI,OAA7E;AAAsF,QAAA,QAAQ,EAAE,KAAKjB,YAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CApBJ,EAwBI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,IAAI,EAAC,MAAjD;AAAwD,QAAA,KAAK,EAAE,KAAKa,KAAL,CAAWK,IAA1E;AAAgF,QAAA,QAAQ,EAAE,KAAKlB,YAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAxBJ,EA4BI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,IAAI,EAAC,MAAjD;AAAwD,QAAA,KAAK,EAAE,KAAKa,KAAL,CAAWM,IAA1E;AAAgF,QAAA,QAAQ,EAAE,KAAKnB,YAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CA5BJ,EAgCI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,SAAS,EAAC,kBAAjC;AAAoD,QAAA,IAAI,EAAC,QAAzD;AAAkE,QAAA,OAAO,EAAE,KAAKa,KAAL,CAAWO,MAAtF;AAA8F,QAAA,QAAQ,EAAE,KAAKpB,YAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAO,QAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,CAhCJ,EAoCI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,QAAQ,MAAxC;AAAyC,QAAA,QAAQ,EAAE,KAAKA,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CApCJ,EAuCI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAvCJ,CADJ,CAHJ,CADJ;AAiDH;;;;EAhLuBR,S;;AAmL5B,eAAeM,aAAf","sourcesContent":["import React, {Component} from 'react';\nimport {callApi} from \"../../utils/apiCaller\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {NotificationContainer, NotificationManager} from \"react-notifications\";\nimport Alert from \"../../components/Alert/Alert\";\nimport './CreateProduct.css'\n\nclass CreateProduct extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            projectName: '',\n            category: 0,\n            investor: '',\n            address: '',\n            area: '',\n            time: '',\n            isMain: false,\n            files: null,\n            isLoading: false,\n            isDisplayAlert: false,\n            messageAlert: ''\n        }\n    };\n\n    handleChange = (event) => {\n        const target = event.target;\n        let value = target.value;\n        if(target.type === 'file') {\n            value = target.files;\n        } else if(target.type === 'checkbox') {\n            value = target.checked;\n        }\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(this.state);\n        let {projectName, category, investor, address, area, time, isMain, file} = this.state;\n\n        const formData = new FormData();\n        formData.append('projectName', projectName);\n        formData.append('category', category);\n        formData.append('investor', investor);\n        formData.append('address', address);\n        formData.append('area', area);\n        formData.append('time', time);\n        formData.append('isMain', isMain);\n        formData.append('file', file);\n        const headers = {\n            'content-type': 'multipart/form-data'\n        };\n        this.setState({\n           isLoading: true\n        });\n        callApi(\"product/uploads\", 'POST', formData, headers).then(res => {\n            NotificationManager.success('Success message', '', 1000, null, true);\n            this.setState({\n                isLoading: false,\n                isDisplayAlert: true,\n                messageAlert: 'Tạo sảm phẩm thành công'\n            });\n        });\n    };\n\n    handleDrop = files => {\n        // Push all the axios request promise into a single array\n        const uploaders = files.map(file => {\n            // Initial FormData\n            const formData = new FormData();\n            formData.append(\"file\", file);\n            formData.append(\"tags\", `codeinfuse, medium, gist`);\n            formData.append(\"upload_preset\", \"pvhilzh7\"); // Replace the preset name with your own\n            formData.append(\"api_key\", \"1234567\"); // Replace API key with your own Cloudinary key\n            formData.append(\"timestamp\", (Date.now() / 1000) | 0);\n\n            // Make an AJAX upload request using Axios (replace Cloudinary URL below with your own)\n            return axios.post(\"https://api.cloudinary.com/v1_1/codeinfuse/image/upload\", formData, {\n                headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n            }).then(response => {\n                const data = response.data;\n                const fileURL = data.secure_url // You should store this URL for future references in your app\n                console.log(data);\n            })\n        });\n\n        // Once all the files are uploaded\n        axios.all(uploaders).then(() => {\n            // ... perform after upload is successful operation\n        });\n    }\n\n    // handleSubmitAll = (event) => {\n    //     event.preventDefault();\n    //     console.log(this.state);\n    //     let {projectName, category, investor, address, area, time, isMain, files} = this.state;\n    //     this.setState({\n    //         isLoading: true\n    //     });\n    //     const uploaders = files.map(file => {\n    //         const formData = new FormData();\n    //         formData.append('projectName', projectName);\n    //         formData.append('category', category);\n    //         formData.append('investor', investor);\n    //         formData.append('address', address);\n    //         formData.append('area', area);\n    //         formData.append('time', time);\n    //         formData.append('isMain', isMain);\n    //         formData.append('file', file);\n    //         const headers = {\n    //             'content-type': 'multipart/form-data'\n    //         };\n    //         return callApi(\"product/uploads\", 'POST', formData, headers).then(res => {\n    //             const data = res.data;\n    //             console.log(data);\n    //         });\n    //     });\n    //     callApi(uploaders, 'all').then(res => {\n    //         NotificationManager.success('Success message', '', 1000, null, true);\n    //         this.setState({\n    //             isLoading: false,\n    //             isDisplayAlert: true,\n    //             messageAlert: 'Tạo sảm phẩm thành công'\n    //         });\n    //     });\n    // };\n\n    render() {\n        return (\n            <div>\n                <Loading isLoading={this.state.isLoading}/>\n                <Alert isDisplay={this.state.isDisplayAlert} message={this.state.messageAlert}/>\n                <div className=\"container mt-3\">\n                    <form onSubmit={this.handleSubmitAll} method=\"POST\">\n                        <div className=\"form-group\">\n                            <label>Dự án</label>\n                            <input type=\"text\" className=\"form-control\" name=\"projectName\" value={this.state.projectName} onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Thể loại</label>\n                            <select\n                                className=\"form-control\"\n                                name=\"category\"\n                                value={this.state.category}\n                                onChange={this.handleChange}>\n                                <option value={0}>Thiết kế nội thất</option>\n                                <option value={1}>Thi công nội thất</option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Chủ đầu tư</label>\n                            <input type=\"text\" className=\"form-control\" name=\"investor\" value={this.state.investor} onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Địa chỉ</label>\n                            <input type=\"text\" className=\"form-control\" name=\"address\" value={this.state.address} onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Diện tích</label>\n                            <input type=\"text\" className=\"form-control\" name=\"area\" value={this.state.area} onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Thời gian</label>\n                            <input type=\"text\" className=\"form-control\" name=\"time\" value={this.state.time} onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"form-check\">\n                            <input type=\"checkbox\" className=\"form-check-input\" name=\"isMain\" checked={this.state.isMain} onChange={this.handleChange}/>\n                            <label className=\"form-check-label\">Tiêu biểu</label>\n                        </div>\n                        <div className=\"form-group mt-3\">\n                            <input type=\"file\" name=\"files\" multiple onChange={this.handleChange}/>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-secondary\">Tạo dự án</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CreateProduct;\n"]},"metadata":{},"sourceType":"module"}