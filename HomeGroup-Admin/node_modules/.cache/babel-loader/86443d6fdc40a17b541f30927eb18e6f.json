{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Initialize = require('./Initialize');\n\nvar _Initialize2 = _interopRequireDefault(_Initialize);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Process = function (_Component) {\n  (0, _inherits3.default)(Process, _Component);\n\n  function Process() {\n    var _this2 = this;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Process);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n      api: undefined\n    }, _this.handleProcess = function () {\n      var _ref = (0, _asyncToGenerator3.default)(\n      /*#__PURE__*/\n      _regenerator2.default.mark(function _callee(fn) {\n        var _api, _data;\n\n        return _regenerator2.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.setState({\n                  data: undefined,\n                  error: undefined,\n                  loading: true\n                });\n\n                _context.prev = 1;\n                _api = _this.state.api;\n\n                if (_api) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error('Facebook is not initialized. Wait for isReady');\n\n              case 5:\n                _context.next = 7;\n                return fn(_api);\n\n              case 7:\n                _data = _context.sent;\n\n                _this.setState({\n                  data: _data,\n                  loading: false\n                });\n\n                return _context.abrupt('return', _data);\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context['catch'](1);\n\n                _this.setState({\n                  error: _context.t0,\n                  loading: false\n                });\n\n                throw _context.t0;\n\n              case 16:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, _this2, [[1, 12]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(), _this.handleReady = function (api) {\n      _this.setState({\n        api: api\n      });\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  Process.prototype.render = function render() {\n    var children = this.props.children;\n    var _state = this.state,\n        api = _state.api,\n        loading = _state.loading,\n        data = _state.data,\n        error = _state.error;\n    return _react2.default.createElement(_Initialize2.default, {\n      onReady: this.handleReady\n    }, children({\n      loading: !api || loading,\n      handleProcess: this.handleProcess,\n      data: data,\n      error: error\n    }));\n  };\n\n  return Process;\n}(_react.Component);\n\nexports.default = Process;","map":null,"metadata":{},"sourceType":"script"}