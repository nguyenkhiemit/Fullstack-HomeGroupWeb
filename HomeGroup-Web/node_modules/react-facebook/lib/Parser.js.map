{"version":3,"sources":["../src/Parser.jsx"],"names":["Parser","state","handleReady","api","setState","handleParse","handleContainer","container","parse","render","props","className","children","Component","defaultProps","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;AACA;;;;AACA;;;;;;IAYqBA,M;;;;;;;;;;;;0JAKnBC,K,GAAe,E,QAEfC,W,GAAc,UAACC,GAAD,EAAuB;AACnC,YAAKC,QAAL,CAAc;AACZD;AADY,OAAd,EAEG,MAAKE,WAFR;AAGD,K,QAEDC,e,GAAkB,UAACC,SAAD,EAA2B;AAC3C,YAAKH,QAAL,CAAc;AACZG;AADY,OAAd,EAEG,MAAKF,WAFR;AAGD,K,QAEDA,W,GAAc,YAAY;AAAA,wBACG,MAAKJ,KADR;AAAA,UAChBE,GADgB,eAChBA,GADgB;AAAA,UACXI,SADW,eACXA,SADW;;AAExB,UAAI,CAACJ,GAAD,IAAQ,CAACI,SAAb,EAAwB;AACtB;AACD;;AAEDJ,UAAIK,KAAJ,CAAUD,SAAV;AACD,K;;;mBAEDE,M,qBAAS;AAAA,iBACyB,KAAKC,KAD9B;AAAA,QACCC,SADD,UACCA,SADD;AAAA,QACYC,QADZ,UACYA,QADZ;;;AAGP,WACE;AAAA;AAAA,QAAK,WAAWD,SAAhB,EAA2B,KAAK,KAAKL,eAArC;AACE;AAAC,4BAAD;AAAA,UAAY,SAAS,KAAKJ,WAA1B;AACGU,iBAAS;AACRP,uBAAa,KAAKA;AADV,SAAT;AADH;AADF,KADF;AASD,G;;;EAxCiCQ,gB,UAC3BC,Y,GAAe;AACpBH,aAAWI;AADS,C;kBADHf,M","file":"Parser.js","sourcesContent":["// @flow\nimport React, { Component, type Node } from 'react';\nimport Initialize from './Initialize';\n\ntype Props = {\n  className?: string,\n  children: Function,\n};\n\ntype State = {\n  api?: Object,\n  container?: Node,\n};\n\nexport default class Parser extends Component<Props, State> {\n  static defaultProps = {\n    className: undefined,\n  };\n\n  state: State = {};\n\n  handleReady = (api: Object): void => {\n    this.setState({\n      api,\n    }, this.handleParse);\n  }\n\n  handleContainer = (container: Node): void => {\n    this.setState({\n      container,\n    }, this.handleParse);\n  }\n\n  handleParse = (): void => {\n    const { api, container } = this.state;\n    if (!api || !container) {\n      return;\n    }\n\n    api.parse(container);\n  }\n\n  render() {\n    const { className, children } = this.props;\n\n    return (\n      <div className={className} ref={this.handleContainer}>\n        <Initialize onReady={this.handleReady}>\n          {children({\n            handleParse: this.handleParse,\n          })}\n        </Initialize>\n      </div>\n    );\n  }\n}\n"]}